using System.Collections.Generic;
using System.Collections.Immutable;

namespace shared {
    public partial class Battle {
        public const uint SPECIES_NONE_CH = 0;
        public const uint SPECIES_BLADEGIRL = 1;
        public const uint SPECIES_WITCHGIRL = 2;
        public const uint SPECIES_BRIGHTWITCH = 4;
        public const uint SPECIES_MAGSWORDGIRL = 6;
        public const uint SPECIES_BOUNTYHUNTER = 7;
        public const uint SPECIES_SPEARWOMAN = 8;
        public const uint SPECIES_LIGHTSPEARWOMAN = 9;
        public const uint SPECIES_YELLOWDOG = 10;
        public const uint SPECIES_BLACKDOG = 11;
        public const uint SPECIES_YELLOWCAT = 12;
        public const uint SPECIES_BLACKCAT = 13;

        public const uint SPECIES_EKRAIL = 14;
        public const uint SPECIES_SWORDMAN = 15;
        public const uint SPECIES_FIRESWORDMAN = 16;
        public const uint SPECIES_WANDWITCHGIRL = 17;

        public const uint SPECIES_ANGEL = 18;

        public const uint SPECIES_DEMON_FIRE_SLIME = 4096;
        public const uint SPECIES_GOBLIN = 4097;
        public const uint SPECIES_SKELEARCHER = 4098;
        public const uint SPECIES_BAT = 4099;
        public const uint SPECIES_FIREBAT = 4100;
        public const uint SPECIES_RIDLEYDRAKE = 4101;
        public const uint SPECIES_BOARWARRIOR = 4102;
        public const uint SPECIES_BOAR = 4103;
        public const uint SPECIES_SWORDMAN_BOSS = 4104;
        public const uint SPECIES_FIRETOTEM = 4105;
        public const uint SPECIES_BRICK1 = 4106;
        public const uint SPECIES_DARKBEAMTOWER = 4107;
        public const uint SPECIES_LIGHTGUARD_RED = 4108;
        public const uint SPECIES_HEAVYGUARD_RED = 4109;
        public const uint SPECIES_RIDERGUARD_RED = 4110;
        public const uint SPECIES_STONE_GOLEM = 4111;
        public const uint SPECIES_BOMBERGOBLIN = 4112;
        public const uint SPECIES_ARCHERGUARD_RED = 4113;

        // Non-interauctive
        public const uint SPECIES_VIL_MALE1 = 8192;
        public const uint SPECIES_VIL_MALE2 = 8193;
        public const uint SPECIES_VIL_FEMALE1 = 8194;
        public const uint SPECIES_VIL_FEMALE2 = 8195;
        public const uint SPECIES_PINK_PIG = 8196;

        public const float DEFAULT_MIN_FALLING_VEL_Y_COLLISION_SPACE = -4.5f; 
        public const int DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID = (int)(DEFAULT_MIN_FALLING_VEL_Y_COLLISION_SPACE*COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO);

        /**
         [WARNING] 

         The "SizeY" component of "BlownUp/LayDown/Dying" MUST be smaller or equal to that of "Shrinked", such that when a character is blown up an falled onto a "slip-jump provider", it wouldn't trigger an unexpected slip-jump.

         Reference value for "ProactiveJumpStartupFrames" -- Ibuki in Street Figher IV/V has a pre-jump frame count of 4, according to https://streetfighter.fandom.com/wiki/Jump. I also counted that of Ken in Street Fighter VI by 60fps recording and got the same result.
         */
        public static ImmutableDictionary<uint, CharacterConfig> characters = ImmutableDictionary.Create<uint, CharacterConfig>().AddRange(
                new[]
                {
                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BLADEGIRL, new CharacterConfig {
                        SpeciesId = SPECIES_BLADEGIRL,
                        SpeciesName = "BladeGirl",
                        Hp = 150,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 12,
                        LayDownFramesToRecover = 12,
                        GetUpInvinsibleFrames = 17,
                        GetUpFramesToRecover = 14,
                        Speed = (int)(2.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DashingEnabled = true,
                        SlidingEnabled = true,
                        OnWallEnabled = true,
                        CrouchingEnabled = true,
                        CrouchingAtkEnabled = true, // It's actually weird to have "false == CrouchingAtkEnabled && true == CrouchingEnabled", but flexibility provided anyway
                        WallJumpingFramesToRecover = 8,
                        WallJumpingInitVelX = (int)(2.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        WallJumpingInitVelY =  (int)(8 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        WallSlidingVelY = (int)(-1 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetX = (int)(8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(24f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(18.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 3,
                        Hardness = 5,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 1,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 0,
                                FramesToRecover = 0,
                                DefaultQuota = 3,
                                GaugeRequired = 100,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 4, // TODO: Remove this hardcoded "skillId"!
                            },
                            new InventorySlot {
                                StockType = InventorySlotStockType.PocketIv,
                            }
                        },
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_SWORDMAN, new CharacterConfig {
                        SpeciesId = SPECIES_SWORDMAN,
                        SpeciesName = "SwordMan",
                        Hp = 100,
                        Mp = 600,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 14,
                        Speed = (int)(1.7f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(220.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 60,
                        SlidingEnabled = true,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 4,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 10,
                        DefaultDef1BrokenFramesToRecover = 55,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0.1f,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = 2*SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = 2*SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = 2*SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 50,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        NpcPrioritizeBulletHandling = true,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 0,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                GaugeRequired = 120,
                                BuffSpeciesId = XformToFireSwordMan.SpeciesId,
                                SkillId = NO_SKILL, // TODO: Remove this hardcoded "skillId"!
                            }
                        },
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Def1, 20)
                            }
                        ),
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_WITCHGIRL, new CharacterConfig {
                        SpeciesId = SPECIES_WITCHGIRL,
                        SpeciesName = "WitchGirl",
                        Hp = 150,
                        Mp = 2000,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 23,
                        LayDownFramesToRecover = 23,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(1.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 6,
                        DashingEnabled = true,
                        SlidingEnabled = true,
                        OnWallEnabled = false,
                        VisionOffsetX = (int)(8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(24f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 40,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = true,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 4, // Thus when hit by MagicPistolBullet she needs FramesToRecover!
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 0,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 3,
                                GaugeRequired = 120,
                                SkillId = 27,
                                FullChargeBuffSpeciesId = XformToWandWitchGirl.SpeciesId,
                            }
                        },

                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 15,
                        DefaultDef1BrokenFramesToRecover = 55,
                        Def1ActiveVfxSpeciesId = VfxWitchDef1Active.SpeciesId,
                        Def1AtkedVfxSpeciesId = VfxWitchDef1Atked.SpeciesId,
                        Def1BrokenVfxSpeciesId = VfxWitchDef1Broken.SpeciesId,
                        Def1StartupFrames = 6,
                        Def1DamageYield = 0.05f,
                        Def1DefiesEleWeaknessPenetration = true,
                        Def1DefiesDebuff = true,
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Walking, 30)
                            }
                        )
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_FIRESWORDMAN, new CharacterConfig {
                        SpeciesId = SPECIES_FIRESWORDMAN,
                        SpeciesName = "FireSwordMan",
                        Hp = 250,
                        Mp = 1500,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 16,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 17,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(2.2f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(260.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 40,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 6,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 10,
                        DefaultDef1BrokenFramesToRecover = 45,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0,
                        NpcPrioritizeBulletHandling = true,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        SlidingEnabled = true,
                        DashingEnabled = true,
                        DefaultAirDashQuota = 1,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        TransformIntoFramesToRecover = 78,
                        TransformIntoFramesInvinsible = 79,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                DefaultFramesToRecover = 7*BATTLE_DYNAMICS_FPS,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 81, // TODO: Remove this hardcoded "skillId"!
                            }
                        },
                        GaugeIncWhenKilled = 80,
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Def1, 20)
                            }
                        ),
                        Ifc = IfaceCat.Flesh,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_WANDWITCHGIRL, new CharacterConfig {
                        SpeciesId = SPECIES_WANDWITCHGIRL,
                        SpeciesName = "WandWitchGirl",
                        Hp = 150,
                        Mp = 2000,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 25,
                        LayDownFramesToRecover = 25,
                        GetUpInvinsibleFrames = 20,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(2.2f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(7.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DashingEnabled = true,
                        SlidingEnabled = true,
                        OnWallEnabled = false,
                        VisionOffsetX = (int)(8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(24f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 24,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = true,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 5, 
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        MaxAscendingVelY = (int)(2.2f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 0,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 15,
                        DefaultDef1BrokenFramesToRecover = 55,
                        Def1ActiveVfxSpeciesId = VfxWitchDef1Active.SpeciesId,
                        Def1AtkedVfxSpeciesId = VfxWitchDef1Atked.SpeciesId,
                        Def1BrokenVfxSpeciesId = VfxWitchDef1Broken.SpeciesId,
                        Def1StartupFrames = 6,
                        Def1DamageYield = 0f,
                        Def1DefiesEleWeaknessPenetration = true,
                        Def1DefiesDebuff = true,
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoFramesToRecover = 78,
                        TransformIntoFramesInvinsible = 79,
                        JumpHoldingToFly = true,
                        FlyingQuotaRdfCnt = MAX_INT,
                        EleResistance = (ELE_FIRE | ELE_ICE),
                        UseIdle1AsFlyingIdle = true,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                GaugeRequired = 120,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 116, // TODO: Remove this hardcoded "skillId"!
                                SkillIdAir = 116,
                            }
                        },
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BRIGHTWITCH, new CharacterConfig {
                        SpeciesId = SPECIES_BRIGHTWITCH,
                        SpeciesName = "BrightWitch",
                        Hp = 150,
                        Mp = 1500,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 23,
                        LayDownFramesToRecover = 23,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(1.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(7.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DashingEnabled = true,
                        SlidingEnabled = false,
                        OnWallEnabled = false,
                        VisionOffsetX = (int)(8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(24f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(34.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 36,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 4, // Thus when hit by MagicPistolBullet she needs FramesToRecover!
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 1,
                        AirJumpVfxSpeciesId = VfxAirJumpCircle.SpeciesId,
                        HasBtnBCharging = true,
                        BtnBChargedVfxSpeciesId = VfxWaterCharged.SpeciesId,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 3,
                                GaugeRequired = 120,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 79,
                                SkillIdAir = 80,
                            },
                            new InventorySlot {
                                StockType = InventorySlotStockType.PocketIv,
                            }
                        },
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_DEMON_FIRE_SLIME, new CharacterConfig {
                        SpeciesId = SPECIES_DEMON_FIRE_SLIME,
                        SpeciesName = "DemonFireSlime",
                        Hp = 420,
                        Mp = 1000,
                        RepelSoftPushback = true,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 25,
                        LayDownFramesToRecover = 25,
                        GetUpInvinsibleFrames = 20,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(1.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(5.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(8 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(250 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(140 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(32 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(60 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(32 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(45 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(50 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(45 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(50 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(45 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DimmedSizeX = (int)(16 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DimmedSizeY = (int)(16 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 30,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        HasDimmedAnim = true,
                        ProactiveJumpStartupFrames = 14,
                        Hardness = 8,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE * 1.3f),
                        SlipJumpThresHoldBelowTopFaceV = (int)(SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL * 1.3f),
                        SlipJumpCharacterDropVirtual = (int)(SLIP_JUMP_CHARACTER_DROP_VIRTUAL * 1.3f),
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        EleResistance = ELE_FIRE,
                        EleWeakness = ELE_ICE | ELE_WATER,
                        LayDownToRecoverFromDimmed = true,
                        IsKeyCh = true,
                        GaugeIncWhenKilled = 100,
                        NpcNotHuntingInAirOppoCh = true,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                DefaultFramesToRecover = 8*BATTLE_DYNAMICS_FPS,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 15, // TODO: Remove this hardcoded "skillId"!
                            }
                        },
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_GOBLIN, new CharacterConfig {
                        SpeciesId = SPECIES_GOBLIN,
                        SpeciesName = "Goblin",
                        Hp = 40,
                        InAirIdleFrameIdxTurningPoint = 1,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 12,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 10,
                        GetUpFramesToRecover = 12,
                        Speed = (int)(1.1f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(7.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(3.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(124.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(90.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(38.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 6,
                        Hardness = 4,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 30,
                        NpcNotHuntingInAirOppoCh = true,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_MAGSWORDGIRL, new CharacterConfig {
                        SpeciesId = SPECIES_MAGSWORDGIRL,
                        SpeciesName = "MagSwordGirl",
                        Hp = 150,
                        Mp = 800, 
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 16,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 18,
                        GetUpFramesToRecover = 30,
                        Speed = (int)(2.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.9 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(18.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 52,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        DashingEnabled = true,
                        SlidingEnabled = true,
                        CrouchingEnabled = true,
                        CrouchingAtkEnabled = true,
                        ProactiveJumpStartupFrames = 4,
                        UseInventoryBtnB = true,
                        Hardness = 5,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 3, // Her air dash is an attack, thus should be quite limited
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 0,
                                DefaultQuota = 3,
                                GaugeRequired = 100,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 21, // TODO: Remove this hardcoded "skillId"!
                                SkillIdAir = 21,
                            },
                            new InventorySlot {
                                StockType = InventorySlotStockType.PocketIv,
                                Quota = 0,
                                FramesToRecover = 0,
                                DefaultQuota = 0,
                                DefaultFramesToRecover = MAX_INT,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                            },
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 7,
                                FramesToRecover = 0,
                                DefaultQuota = 7,
                                DefaultFramesToRecover = 35,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = INVENTORY_BTN_B_SKILL_MSG,
                                SkillIdAir = INVENTORY_BTN_B_SKILL_MSG,
                            }
                        },
                        GaugeIncWhenKilled = 80,
                        HasBtnBCharging = true,
                        Ifc = IfaceCat.Flesh,
                        BtnBChargedVfxSpeciesId = VfxLightCharged.SpeciesId,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BOUNTYHUNTER, new CharacterConfig {
                        SpeciesId = SPECIES_BOUNTYHUNTER,
                        SpeciesName = "BountyHunter",
                        Hp = 150,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 16,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 18,
                        GetUpFramesToRecover = 30,
                        Speed = (int)(2.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.9 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(18.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        CrouchingEnabled = true,
                        CrouchingAtkEnabled = true,
                        OnWallEnabled = true,
                        WallJumpingFramesToRecover = 8,
                        WallJumpingInitVelX = (int)(2.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        WallJumpingInitVelY =  (int)(8 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        WallSlidingVelY = (int)(-1 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DashingEnabled = true,
                        SlidingEnabled = true,
                        ProactiveJumpStartupFrames = 4,
                        UseInventoryBtnB = true,
                        Hardness = 5,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 1,
                        AirJumpVfxSpeciesId = VfxAirJumpDust.SpeciesId,
                        GroundDodgeEnabledByRdfCntFromBeginning = 12, 
                        GroundDodgedFramesInvinsible = 25, 
                        GroundDodgedFramesToRecover = 30, 
                        GroundDodgedSpeed = (int)(4.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), 
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 0,
                                DefaultQuota = 3,
                                GaugeRequired = 100,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 76, // TODO: Remove this hardcoded "skillId"!
                            },
                            new InventorySlot {
                                StockType = InventorySlotStockType.PocketIv,
                                Quota = 0,
                                FramesToRecover = 0,
                                DefaultQuota = 0,
                                DefaultFramesToRecover = MAX_INT,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                            },
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 18,
                                FramesToRecover = 0,
                                DefaultQuota = 18,
                                DefaultFramesToRecover = 25,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = INVENTORY_BTN_B_SKILL_BH,
                                SkillIdAir = INVENTORY_BTN_B_SKILL_BH,
                            }
                        },
                        GaugeIncWhenKilled = 80,
                        HasBtnBCharging = true,
                        Ifc = IfaceCat.Flesh,
                        BtnBChargedVfxSpeciesId = VfxLightCharged.SpeciesId,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.InAirIdle1ByJump, 23),
                                new KeyValuePair<CharacterState, int>(CharacterState.InAirIdle1ByWallJump, 25),
                                new KeyValuePair<CharacterState, int>(CharacterState.InAirIdle2ByJump, 31)
                            }
                        ),
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_SPEARWOMAN, new CharacterConfig {
                        SpeciesId = SPECIES_SPEARWOMAN,
                        SpeciesName = "SpearWoman",
                        Hp = 150,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 20,
                        GetUpFramesToRecover = 26,
                        Speed = (int)(2.1f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(220.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        SlidingEnabled = true,
                        DashingEnabled = true,
                        DefaultAirDashQuota = 1,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 7,
                        Hardness = 5,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 10,
                        DefaultDef1BrokenFramesToRecover = 45,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0.1f,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        NpcPrioritizeBulletHandling = true,
                        GroundDodgeEnabledByIvSlotCInBlockStun = true,
                        GroundDodgeEnabledByRdfCntFromBeginning = 12, 
                        GroundDodgedFramesInvinsible = 25, 
                        GroundDodgedFramesToRecover = 30, 
                        GroundDodgedSpeed = (int)(4.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), 
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 0,
                                FramesToRecover = 0,
                                DefaultQuota = 3,
                                GaugeRequired = 100,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 110, 
                                FullChargeBuffSpeciesId = XformToLightSpearWoman.SpeciesId,
                            }
                        },
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Def1, 10)
                            }
                        ),
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_LIGHTSPEARWOMAN, new CharacterConfig {
                        SpeciesId = SPECIES_LIGHTSPEARWOMAN,
                        SpeciesName = "LightSpearWoman",
                        Hp = 150,
                        Mp = 1000,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 20,
                        GetUpFramesToRecover = 26,
                        Speed = (int)(2.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(4.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(220.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 30,
                        SlidingEnabled = true,
                        DashingEnabled = true,
                        DefaultAirDashQuota = 2,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 5,
                        Hardness = 6,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 10,
                        DefaultDef1BrokenFramesToRecover = 45,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        TransformIntoFramesToRecover = 78,
                        TransformIntoFramesInvinsible = 79,
                        NpcPrioritizeBulletHandling = true,
                        GroundDodgeEnabledByIvSlotCInBlockStun = true,
                        GroundDodgeEnabledByRdfCntFromBeginning = 12, 
                        GroundDodgedFramesInvinsible = 25, 
                        GroundDodgedFramesToRecover = 30, 
                        GroundDodgedSpeed = (int)(4.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), 
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.GaugedMagazineIv,
                                Quota = 0,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                GaugeRequired = 120,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 125 
                            }
                        },
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Def1, 10)
                            }
                        ),
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_SKELEARCHER, new CharacterConfig {
                        SpeciesId = SPECIES_SKELEARCHER,
                        SpeciesName = "SkeleArcher",
                        Hp = 50,
                        Mp = 500,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 16,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 15,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(1.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(5.2f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(48f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(240.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(140.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] "DefaultSizeY-ShrinkedSizeY" MUST be sufficiently large such that the character wouldn't land immediately after "jumpStarted"!
                        LayDownSizeX = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 70,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        SlidingEnabled = true,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 8,
                        Hardness = 5,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE),
                        SlipJumpThresHoldBelowTopFaceV = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL),
                        SlipJumpCharacterDropVirtual = (SLIP_JUMP_CHARACTER_DROP_VIRTUAL),
                        GaugeIncWhenKilled = 40,
                        NpcNotHuntingInAirOppoCh = true,
                        Ifc = IfaceCat.Flesh,
                        EleResistance = ELE_WIND,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        NpcNoDefaultAirWalking = true,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BAT, new CharacterConfig {
                        SpeciesId = SPECIES_BAT,
                        SpeciesName = "Bat",
                        Hp = 30,
                        Mp = 100,
                        InAirIdleFrameIdxTurningPoint = 1,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        Speed = (int)(0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(15.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(-10.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(35.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = (COLLISION_CHARACTER_INDEX_PREFIX | COLLISION_FLYING_CHARACTER_INDEX_PREFIX),
                        HasTurnAroundAnim = false,
                        Hardness = 4,
                        OmitGravity = true,
                        MpRegenPerInterval=10,
                        MpRegenInterval=40,
                        RepelSoftPushback = true, // [WARNING] To avoid "bouncing landing on flying character", don't forget to set either "RepelSoftPushback" or "OmitSoftPushback" here!
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        MaxAscendingVelY = -DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        GaugeIncWhenKilled = 20,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_FIREBAT, new CharacterConfig {
                        SpeciesId = SPECIES_FIREBAT,
                        SpeciesName = "FireBat",
                        Hp = 10,
                        Mp = 1300,
                        InAirIdleFrameIdxTurningPoint = 1,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        Speed = (int)(1.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(-64.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(60.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(96.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(25.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(25.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = (COLLISION_CHARACTER_INDEX_PREFIX | COLLISION_FLYING_CHARACTER_INDEX_PREFIX),
                        HasTurnAroundAnim = false,
                        Hardness = 4,
                        AntiGravityWhenIdle = true,
                        AntiGravityFramesLingering = 5*BATTLE_DYNAMICS_FPS,
                        OmitGravity = true,
                        MpRegenPerInterval=10,
                        MpRegenInterval=40,
                        OmitSoftPushback = true, // [WARNING] To avoid "bouncing landing on flying character", don't forget to set either "RepelSoftPushback" or "OmitSoftPushback" here!
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        MaxAscendingVelY = -DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        EleResistance = ELE_FIRE,
                        EleWeakness = ELE_WATER,
                        GaugeIncWhenKilled = 20,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_RIDLEYDRAKE, new CharacterConfig {
                        SpeciesId = SPECIES_RIDLEYDRAKE,
                        SpeciesName = "RidleyDrake",
                        Hp = 380,
                        Mp = 1800,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 23,
                        LayDownFramesToRecover = 23,
                        GetUpInvinsibleFrames = 18,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(2.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.8 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DashingEnabled = true,
                        SlidingEnabled = false,
                        OnWallEnabled = false,
                        HasDimmedAnim = true,
                        HasAwakingAnim = true,
                        AwakingFramesToRecover = 100,
                        AwakingFramesInvinsible = 100,
                        VisionOffsetX = (int)(8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(36f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(280.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(240.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(18.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(60.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(18.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(60.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(60.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval=100,
                        MpRegenInterval=45,
                        CollisionTypeMask = (COLLISION_CHARACTER_INDEX_PREFIX | COLLISION_FLYING_CHARACTER_INDEX_PREFIX),
                        HasTurnAroundAnim = true,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 5, // Thus when hit by MagicPistolBullet she needs FramesToRecover!
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        MaxAscendingVelY = (int)(2.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE * 1.3f),
                        SlipJumpThresHoldBelowTopFaceV = (int)(SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL * 1.3f),
                        SlipJumpCharacterDropVirtual = (int)(SLIP_JUMP_CHARACTER_DROP_VIRTUAL * 1.3f),
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 0,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        JumpHoldingToFly = true,
                        FlyingQuotaRdfCnt = MAX_INT,
                        IsKeyCh = true,
                        Ifc = IfaceCat.Flesh,
                        EleResistance = (ELE_THUNDER),
                        EleWeakness = (ELE_ICE | ELE_WATER),
                        GaugeIncWhenKilled = 100,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                DefaultFramesToRecover = (int)(8.5f*BATTLE_DYNAMICS_FPS),
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 35, // TODO: Remove this hardcoded "skillId"!
                                SkillIdAir = 51,
                            }
                        },
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BOARWARRIOR, new CharacterConfig {
                        SpeciesId = SPECIES_BOARWARRIOR,
                        SpeciesName = "BoarWarrior",
                        Hp = 250,
                        InAirIdleFrameIdxTurningPoint = 1,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 12,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 12,
                        Speed = (int)(1.1f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(-5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(180.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(95.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(54.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(54.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(54.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(54.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 6,
                        Hardness = 7,
                        HasDimmedAnim = true,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 60,
                        NpcNotHuntingInAirOppoCh = true,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BOAR, new CharacterConfig {
                        SpeciesId = SPECIES_BOAR,
                        SpeciesName = "Boar",
                        Hp = 200,
                        Mp = 800,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 23,
                        LayDownFramesToRecover = 23,
                        GetUpInvinsibleFrames = 18,
                        GetUpFramesToRecover = 27,
                        Speed = (int)(1.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(5.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(200.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval=30,
                        MpRegenInterval=60,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        ProactiveJumpStartupFrames = 6,
                        Hardness = 5,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE * .8f),
                        SlipJumpThresHoldBelowTopFaceV = (int)(SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL * .8f),
                        SlipJumpCharacterDropVirtual = (int)(SLIP_JUMP_CHARACTER_DROP_VIRTUAL * .8f),
                        NpcNotHuntingInAirOppoCh = true,
                        GaugeIncWhenKilled = 50,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_SWORDMAN_BOSS, new CharacterConfig {
                        SpeciesId = SPECIES_SWORDMAN_BOSS,
                        SpeciesName = "SwordMan",
                        Hp = 100,
                        Mp = 600,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 14,
                        Speed = (int)(1.7f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(220.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval=100,
                        MpRegenInterval=45,
                        SlidingEnabled = true,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 4,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 10,
                        DefaultDef1BrokenFramesToRecover = 55,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0.1f,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 50,
                        Ifc = IfaceCat.Flesh,
                        HasDimmedAnim = true,
                        TransformIntoSpeciesIdUponDeath = SPECIES_FIRESWORDMAN,
                        NpcPrioritizeBulletHandling = true,
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Def1, 20)
                            }
                        ),
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_FIRETOTEM, new CharacterConfig {
                        SpeciesId = SPECIES_FIRETOTEM,
                        SpeciesName = "FireTotem",
                        Hp = 200,
                        DefaultSizeX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 200,
                        GaugeIncWhenKilled = 120,
                        RepelSoftPushback = true,
                        Ifc = IfaceCat.Rock,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BRICK1, new CharacterConfig {
                        SpeciesId = SPECIES_BRICK1,
                        SpeciesName = "Brick1",
                        Hp = 16,
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_M_FIREBALL_INDEX_PREFIX, // Such that it only collides with character, melee and fireballs
                        Hardness = 200,
                        OmitGravity = true,
                        RepelSoftPushback = true,
                        AllowsSameTeamSoftPushback = true,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        GaugeIncWhenKilled = 10,
                        Ifc = IfaceCat.Rock,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_LIGHTGUARD_RED, new CharacterConfig {
                        SpeciesId = SPECIES_LIGHTGUARD_RED,
                        SpeciesName = "LightGuardRed",
                        Hp = 150,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 14,
                        Speed = (int)(1.2f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(6.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(64.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(0.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(128.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(64.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 2) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 2) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        ProactiveJumpStartupFrames = 4,
                        DashingEnabled = true,
                        Hardness = 5,
                        HasDimmedAnim = true,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 6,
                        DefaultDef1BrokenFramesToRecover = 90,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0.05f,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE),
                        SlipJumpThresHoldBelowTopFaceV = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL),
                        SlipJumpCharacterDropVirtual = (SLIP_JUMP_CHARACTER_DROP_VIRTUAL),
                        GaugeIncWhenKilled = 20,
                        Ifc = IfaceCat.Metal,
                        EleResistance = ELE_WIND,
                        EleWeakness = ELE_THUNDER,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        NpcPrioritizeBulletHandling = true, 
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_HEAVYGUARD_RED, new CharacterConfig {
                        SpeciesId = SPECIES_HEAVYGUARD_RED,
                        SpeciesName = "HeavyGuardRed",
                        Hp = 150,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 14,
                        Speed = (int)(0.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(7.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(0.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(64.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 2) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 2) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(42.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        ProactiveJumpStartupFrames = 4,
                        DashingEnabled = true,
                        HasDimmedAnim = true,
                        Hardness = 5,
                        WalkingAutoDef1 = true,
                        HasDef1 = true,
                        HasDef1Atked1Anim = true,
                        DefaultDef1Quota = 8,
                        Def1DamageYield = 0f,
                        DefaultDef1BrokenFramesToRecover = 90,
                        Def1StartupFrames = 4,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE),
                        SlipJumpThresHoldBelowTopFaceV = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL),
                        SlipJumpCharacterDropVirtual = (SLIP_JUMP_CHARACTER_DROP_VIRTUAL),
                        GaugeIncWhenKilled = 30,
                        Ifc = IfaceCat.Metal,
                        EleResistance = ELE_WIND,
                        EleWeakness = ELE_THUNDER,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        NpcPrioritizeBulletHandling = true, 
                        LoopingChStates = ImmutableDictionary.Create<CharacterState, int>().AddRange(
                            new[]
                            {
                                new KeyValuePair<CharacterState, int>(CharacterState.Dashing, 24)
                            }
                        )
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_RIDERGUARD_RED, new CharacterConfig {
                        SpeciesId = SPECIES_RIDERGUARD_RED,
                        SpeciesName = "RiderGuardRed",
                        Hp = 250,
                        Mp = 600,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 16,
                        GetUpFramesToRecover = 14,
                        Speed = (int)(1.7f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(5.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(0.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(240.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(80.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(70.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(70.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(70.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(70.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        ProactiveJumpStartupFrames = 10,
                        DashingEnabled = true,
                        HasDimmedAnim = true,
                        Hardness = 7,
                        MpRegenPerInterval = 100,
                        MpRegenInterval = 60,
                        Def1DamageYield = 0.01f,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (2*SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE),
                        SlipJumpThresHoldBelowTopFaceV = (2*SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL),
                        SlipJumpCharacterDropVirtual = (2*SLIP_JUMP_CHARACTER_DROP_VIRTUAL),
                        GaugeIncWhenKilled = 50,
                        Ifc = IfaceCat.Flesh,
                        EleResistance = ELE_THUNDER,
                        EleWeakness = ELE_WIND,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_EKRAIL, new CharacterConfig {
                        SpeciesId = SPECIES_EKRAIL,
                        SpeciesName = "Ekrail",
                        Hp = 180,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 16,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 18,
                        GetUpFramesToRecover = 30,
                        Speed = (int)(2.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.9 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 4,
                        Hardness = 5,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        DefaultAirDashQuota = 1,
                        DefaultAirJumpQuota = 1,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_VIL_MALE1, new CharacterConfig {
                        SpeciesId = SPECIES_VIL_MALE1,
                        SpeciesName = "VillagerMale1",
                        Hp = 10,
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 1,
                        HasDimmedAnim = true,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_VIL_MALE2, new CharacterConfig {
                        SpeciesId = SPECIES_VIL_MALE2,
                        SpeciesName = "VillagerMale2",
                        Hp = 10,
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 1,
                        HasDimmedAnim = true,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_VIL_FEMALE1, new CharacterConfig {
                        SpeciesId = SPECIES_VIL_FEMALE1,
                        SpeciesName = "VillagerFemale1",
                        Hp = 10,
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 1,
                        HasDimmedAnim = true,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_VIL_FEMALE2, new CharacterConfig {
                        SpeciesId = SPECIES_VIL_FEMALE2,
                        SpeciesName = "VillagerFemale2",
                        Hp = 10,
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(40.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(36.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        HasDimmedAnim = true,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 1,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_PINK_PIG, new CharacterConfig {
                        SpeciesId = SPECIES_PINK_PIG,
                        SpeciesName = "PinkPig",
                        Hp = 10,
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        DefaultSizeX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(22.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        HasDimmedAnim = true,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 1,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_STONE_GOLEM, new CharacterConfig {
                        SpeciesId = SPECIES_STONE_GOLEM,
                        SpeciesName = "StoneGolem",
                        Hp = 350,
                        Mp = 1500,
                        Speed = (int)(1.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownFrames = 30,
                        LayDownFramesToRecover = 30,
                        GetUpInvinsibleFrames = 65,
                        GetUpFramesToRecover = 60,
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(58.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(180.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(120.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(32 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(32 * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(32f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(32f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        ProactiveJumpStartupFrames = 6,
                        Hardness = 100,
                        HasDimmedAnim = true,
                        MpRegenPerInterval=100,
                        MpRegenInterval=30,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        GaugeIncWhenKilled = 100,
                        Ifc = IfaceCat.Rock,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        IsKeyCh = true,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultFramesToRecover = (int)(8.5f*BATTLE_DYNAMICS_FPS),
                                DefaultQuota = 1,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 102, // TODO: Remove this hardcoded "skillId"!
                            }
                        },
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_BOMBERGOBLIN, new CharacterConfig {
                        SpeciesId = SPECIES_BOMBERGOBLIN,
                        SpeciesName = "BomberGoblin",
                        Hp = 20,
                        InAirIdleFrameIdxTurningPoint = 1,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 12,
                        LayDownFramesToRecover = 16,
                        GetUpInvinsibleFrames = 10,
                        GetUpFramesToRecover = 12,
                        Speed = (int)(1.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(3.5f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ProactiveJumpStartupFrames = 9, // Difficult to jump because it's carrying bombs
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(120.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(38.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(44.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        HasTurnAroundAnim = false,
                        Hardness = 4,
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE),
                        SlipJumpThresHoldBelowTopFaceV = (SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL),
                        SlipJumpCharacterDropVirtual = (SLIP_JUMP_CHARACTER_DROP_VIRTUAL),
                        GaugeIncWhenKilled = 50,
                        NpcNotHuntingInAirOppoCh = true,
                        Ifc = IfaceCat.Flesh,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                DefaultFramesToRecover = 7*BATTLE_DYNAMICS_FPS,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 117, // TODO: Remove this hardcoded "skillId"!
                            }
                        },
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_DARKBEAMTOWER, new CharacterConfig {
                        SpeciesId = SPECIES_DARKBEAMTOWER,
                        SpeciesName = "DarkBeamTower",
                        Hp = 600,
                        Mp = 3000,
                        DefaultSizeX = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DefaultSizeY = (int)(38.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(38.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(38.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(30.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(38.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MpRegenPerInterval=100,
                        MpRegenInterval=50,
                        VisionOffsetX = (int)(48f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(240.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(140.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        CollisionTypeMask = COLLISION_CHARACTER_INDEX_PREFIX,
                        Hardness = 200,
                        GaugeIncWhenKilled = 120,
                        RepelSoftPushback = true,
                        Ifc = IfaceCat.Rock,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                    }),

                    new KeyValuePair<uint, CharacterConfig>(SPECIES_ANGEL, new CharacterConfig {
                        SpeciesId = SPECIES_ANGEL,
                        SpeciesName = "Angel",
                        Hp = 150,
                        Mp = 3000,
                        InAirIdleFrameIdxTurningPoint = 11,
                        InAirIdleFrameIdxTurnedCycle = 1,
                        LayDownFrames = 17,
                        LayDownFramesToRecover = 17,
                        GetUpInvinsibleFrames = 17,
                        GetUpFramesToRecover = 17,
                        Speed = (int)(1.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        MaxAscendingVelY = (int)(1.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DownSlopePrimerVelY = (int)(-0.8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpingInitVelY = (int)(8.3f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        JumpHoldingToFly = true,
                        FlyingQuotaRdfCnt = 6*BATTLE_DYNAMICS_FPS,
                        EleResistance = (ELE_FIRE | ELE_ICE | ELE_WATER | ELE_THUNDER | ELE_ROCK),
                        InertiaFramesToRecover = 4,
                        VisionOffsetX = (int)(8f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionOffsetY = (int)(12f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeX = (int)(160.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSizeY = (int)(100.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        VisionSearchIntervalPow2Minus1U = (1u << 3) - 1,
                        VisionSearchIntervalPow2Minus1 = (int)((1u << 3) - 1),
                        DefaultSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO), // [WARNING] Being too "wide" can make "CrouchIdle1" bouncing on slopes!
                        DefaultSizeY = (int)(32.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeX = (int)(16.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        ShrinkedSizeY = (int)(24.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        LayDownSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeX = (int)(50.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DyingSizeY = (int)(12.0f * COLLISION_SPACE_TO_VIRTUAL_GRID_RATIO),
                        DashingEnabled = true,
                        DefaultAirDashQuota = MAX_UINT,
                        MpRegenPerInterval = 200,
                        MpRegenInterval = 30,
                        CollisionTypeMask = (COLLISION_CHARACTER_INDEX_PREFIX | COLLISION_FLYING_CHARACTER_INDEX_PREFIX),
                        ProactiveJumpStartupFrames = 6,
                        NpcPrioritizeAllyHealing = true,
                        Hardness = 6, // Thus when hit by MagicPistolBullet she needs FramesToRecover!
                        MinFallingVelY = DEFAULT_MIN_FALLING_VEL_Y_VIRTUAL_GRID,
                        SlipJumpThresHoldBelowTopFace = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE,
                        SlipJumpThresHoldBelowTopFaceV = SLIP_JUMP_THRESHOLD_BELOW_TOP_FACE_VIRTUAL,
                        SlipJumpCharacterDropVirtual = SLIP_JUMP_CHARACTER_DROP_VIRTUAL,
                        TransformIntoSpeciesIdUponDeath = SPECIES_NONE_CH,
                        HasDef1Atked1Anim = true,
                        Def1StartupFrames = 4,
                        Def1DamageYield = 0f,
                        Def1DefiesEleWeaknessPenetration = true,
                        Def1DefiesDebuff = true,
                        GaugeIncWhenKilled = 80,
                        Ifc = IfaceCat.Flesh,
                        InitInventorySlots = new List<InventorySlot> {
                            new InventorySlot {
                                StockType = InventorySlotStockType.TimedMagazineIv,
                                Quota = 1,
                                FramesToRecover = 0,
                                DefaultQuota = 1,
                                DefaultFramesToRecover = 7*BATTLE_DYNAMICS_FPS,
                                BuffSpeciesId = TERMINATING_BUFF_SPECIES_ID,
                                SkillId = 138 // TODO: Remove this hardcoded "skillId"!
                            }
                        },
                    }),
            });
    }
}
